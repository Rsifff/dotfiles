{
    "queries": [
        {
            "name": "Owned users",
            "queryList": [{
                "final": true,
                "query": "MATCH (m:User) WHERE m.owned=TRUE RETURN m"
            }]
        },
        {
            "name": "Owned computers",
            "queryList": [{
                "final": true,
                "query": "MATCH (m:Computer) WHERE m.owned=TRUE RETURN m"
            }]
        },
        {
            "name": "Owned groups",
            "queryList": [{
                "final": true,
                "query": "MATCH (m:Group) WHERE m.owned=TRUE RETURN m"
            }]
        },
        {
            "name": "All groups of all owned users",
            "queryList": [{
                "final": true,
                "query": "MATCH (m:User) WHERE m.owned=TRUE WITH m MATCH p=(m)-[:MemberOf*1..]->(n:Group) RETURN p"
            }]
        },
        {
            "name": "Direct groups of all owned users",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User {owned:true}), (g:Group), p=(u)-[:MemberOf]->(g) RETURN p",
                "props": {},
                "allowCollapse": true
            }]
        },
        {
            "name": "Shortest paths from owned principals to High Value Targets (5 hops)",
            "queryList": [{
                "final": true,
                "query": "MATCH p=shortestPath((n {owned:true})-[:MemberOf|HasSession|AdminTo|AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|CanRDP|ExecuteDCOM|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|SQLAdmin|ReadGMSAPassword|HasSIDHistory|CanPSRemote*1..5]->(m {highvalue:true})) WHERE NOT n=m RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Most exploitable paths from owned principals to High Value Targets (5 hops)",
            "queryList": [{
                "final": true,
                "query": "MATCH p=allShortestPaths((n {owned:true})-[:MemberOf|AdminTo|AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|ExecuteDCOM|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|SQLAdmin|ReadGMSAPassword|HasSIDHistory*1..5]->(m {highvalue:true})) WHERE NOT n=m RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Next steps (5 hops) from owned principals",
            "queryList": [{
                "final": true,
                "query": "MATCH p=shortestPath((c {owned: true})-[*1..5]->(s)) WHERE NOT c = s RETURN p"
            }]
        },
        {
            "name": "Next steps (3 hops) from owned principals",
            "queryList": [{
                "final": true,
                "query": "MATCH p=shortestPath((c {owned: true})-[*1..3]->(s)) WHERE NOT c = s RETURN p"
            }]
        },
        {
            "name": "Owned users with permissions against GPOs",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(u:User {owned:true})-[r:AllExtendedRights|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|GpLink*1..]->(g:GPO) RETURN p"
            }]
        },
        {
            "name": ""
        },
        {

            "name": "Kerberoastable Users",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User)WHERE n.hasspn=true RETURN n",
                "allowCollapse": false
            }]
        },
        {
            "name": "Kerberoastable users with a path to DA",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User {hasspn:true}) MATCH (g:Group) WHERE g.objectid ENDS WITH '-512' MATCH p = shortestPath( (u)-[*1..]->(g) ) RETURN p"
            }]
        },
        {
            "name": "Kerberoastable users with a path to High Value",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User {hasspn:true}),(n {highvalue:true}),p = shortestPath( (u)-[*1..]->(n) ) RETURN p"
            }]
        },
        {
            "name": " Kerberoastable users and where they are AdminTo",
            "queryList": [{
                "final": true,
                "query": "OPTIONAL MATCH (u1:User) WHERE u1.hasspn=true OPTIONAL MATCH (u1)-[r:AdminTo]->(c:Computer) RETURN u"
            }]
        },
        {
            "name": "Kerberoastable users who are members of high value groups",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User)-[r:MemberOf*1..]->(g:Group) WHERE g.highvalue=true AND u.hasspn=true RETURN u"
            }]
        },
        {
            "name": "Kerberoastable users with passwords last set > 5 years ago",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User) WHERE n.hasspn=true AND WHERE u.pwdlastset < (datetime().epochseconds - (1825 * 86400)) and NOT u.pwdlastset IN [-1.0, 0.0] RETURN u"
            }]
        },
        {
            "name": " Return the name of every computer in the database where at least one SPN for the computer contains the string 'MSSQL'",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE ANY (x IN c.serviceprincipalnames WHERE toUpper(x) CONTAINS 'MSSQL') RETURN c"
            }]
        },
        {
            "name": "Find users that can be AS-REP roasted",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User {dontreqpreauth: true}) RETURN u"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Find all computers with Unconstrained Delegation",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer {unconstraineddelegation:true}) return c"
            }]
        },
        {
            "name": "Find computers that allow unconstrained delegation that ARENâ€™T domain controllers.",
            "queryList": [{
                "final": true,
                "query": "MATCH (c1:Computer)-[:MemberOf*1..]->(g:Group) WHERE g.objectid ENDS WITH '-516' WITH COLLECT(c1.name) AS domainControllers MATCH (c2:Computer {unconstraineddelegation:true}) WHERE NOT c2.name IN domainControllers RETURN c2"
            }]
        },
        {
            "name": "(Warning: edits the DB) Mark unconstrained delegation systems as high value targets",
            "queryList": [{
                "final": true,
                "query": "MATCH (dc:Computer)-[:MemberOf*1..]->(g:Group) WHERE g.objectsid ENDS WITH '516' WITH COLLECT(dc) as domainControllers MATCH p = (d:Domain)-[:Contains*1..]->(c:Computer {unconstraineddelegation:true}) WHERE NOT c in domainControllers SET c.highvalue = true RETURN c"
            }]
        },
        {
            "name": "Find constrained delegation",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(u:User)-[:AllowedToDelegate]->(c:Computer) RETURN p"
            }]
        },
        {
            "name": "Find computers with constrained delegation permissions and the corresponding targets where they allowed to delegate",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE c.allowedtodelegate IS NOT NULL RETURN c"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Logged in Admins",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(a:Computer)-[r:HasSession]->(b:User) WITH a,b,r MATCH p=shortestPath((b)-[:AdminTo|MemberOf*1..]->(a)) RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Users with local admin rights",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(m:User)-[r:AdminTo]->(n:Computer) RETURN p"
            }]
        },
        {
            "name": "Domain admin sessions",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User)-[:MemberOf]->(g:Group) WHERE g.objectid ENDS WITH '-512' MATCH p = (c:Computer)-[:HasSession]->(n) return p"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Groups of High Value Targets",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(n:User)-[r:MemberOf*1..]->(m:Group {highvalue:true}) RETURN p"
            }]
        },
        {
            "name": "Non Admin Groups with High Value Privileges",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(g:Group)-[r:Owns|:WriteDacl|:GenericAll|:WriteOwner|:ExecuteDCOM|:GenericWrite|:AllowedToDelegate|:ForceChangePassword]->(n:Computer) WHERE NOT g.name CONTAINS 'ADMIN' RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Groups with Computer and User Objects",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer)-[r:MemberOf*1..]->(groupsWithComps:Group) WITH groupsWithComps MATCH (u:User)-[r:MemberOf*1..]->(groupsWithComps) RETURN DISTINCT(groupsWithComps) as groupsWithCompsAndUsers",
                "allowCollapse": true,
                "endNode": "{}"
            }]
        },
        {
            "name": "Groups that contain the word 'admin'",
            "queryList": [{
                "final": true,
                "query": "Match (n:Group) WHERE n.name CONTAINS 'ADMIN' RETURN n"
            }]
        },
        {
            "name": "Groups that can reset passwords (Warning: Heavy)",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(m:Group)-[r:ForceChangePassword]->(n:User) RETURN p"
            }]
        },
        {
            "name": "Groups that have local admin rights (Warning: Heavy)",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(m:Group)-[r:AdminTo]->(n:Computer) RETURN p"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Users never logged on and account still active",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User) WHERE n.lastlogontimestamp=-1.0 AND n.enabled=TRUE RETURN n "
            }]
        },
        {
            "name": "Users logged in the last 90 days",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User) WHERE u.lastlogon < (datetime().epochseconds - (90 * 86400)) and NOT u.lastlogon IN [-1.0, 0.0] RETURN u"
            }]
        },
        {
            "name": "Users with passwords last set in the last 90 days",
            "queryList": [{
                "final": true,
                "query": "MATCH (u:User) WHERE u.pwdlastset < (datetime().epochseconds - (90 * 86400)) and NOT u.pwdlastset IN [-1.0, 0.0] RETURN u"
            }]
        },
        {
            "name": "Find if unprivileged users have rights to add members into groups",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User {admincount:False}) MATCH p=allShortestPaths((n)-[r:AddMember*1..]->(m:Group)) RETURN p"
            }]
        },
        {
            "name": "Find all users a part of the VPN group",
            "queryList": [{
                "final": true,
                "query": "Match p=(u:User)-[:MemberOf]->(g:Group) WHERE toUPPER (g.name) CONTAINS 'VPN' return p"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "View all GPOs",
            "queryList": [{
                "final": true,
                "query": "Match (n:GPO) RETURN n"
            }]
        },
        {
            "name": "Find if any domain user has interesting permissions against a GPO (Warning: Heavy)",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(u:User)-[r:AllExtendedRights|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|GpLink*1..]->(g:GPO) RETURN p"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Can a user from domain â€˜A â€˜ do anything to any computer in domain â€˜Bâ€™ (Warning: VERY Heavy)",
            "queryList": [{
                    "final": false,
                    "title": "Select source domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": false,
                    "title": "Select destination domain...",
                    "query": "MATCH (n:Domain) RETURN n.name ORDER BY n.name DESC"
                },
                {
                    "final": true,
                    "query": "MATCH (n:User {domain: {result}}) MATCH (m:Computer {domain: {}}) MATCH p=allShortestPaths((n)-[r:MemberOf|HasSession|AdminTo|AllExtendedRights|AddMember|ForceChangePassword|GenericAll|GenericWrite|Owns|WriteDacl|WriteOwner|CanRDP|ExecuteDCOM|AllowedToDelegate|ReadLAPSPassword|Contains|GpLink|AddAllowedToAct|AllowedToAct|SQLAdmin*1..]->(m)) RETURN p",
                    "startNode": "{}",
                    "allowCollapse": false
                }
            ]
        },
        {
            "name": ""
        },
        {
            "name": "Find all computers running with Windows XP",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS 'XP' RETURN c"
            }]
        },
        {
            "name": "Find all computers running with Windows 2000",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS '2000' RETURN c"
            }]
        },
        {
            "name": "Find all computers running with Windows 2003",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS '2003' RETURN c"
            }]
        },
        {
            "name": "Find all computers running with Windows 2008",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS '2008' RETURN c"
            }]
        },
        {
            "name": "Find all computers running with Windows Vista",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS 'VISTA' RETURN c"
            }]
        },
        {
            "name": "Find all computers running with Windows 7",
            "queryList": [{
                "final": true,
                "query": "MATCH (c:Computer) WHERE toUpper(c.operatingsystem) CONTAINS '7' RETURN c"
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Top Ten Users with Most Sessions",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User),(m:Computer), (n)<-[r:HasSession]-(m) WHERE NOT n.name STARTS WITH 'ANONYMOUS LOGON' AND NOT n.name='' WITH n, count(r) as rel_count order by rel_count desc LIMIT 10 MATCH p=(m)-[r:HasSession]->(n) RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Top Ten Computers with Most Sessions",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User),(m:Computer), (n)<-[r:HasSession]-(m) WHERE NOT n.name STARTS WITH 'ANONYMOUS LOGON' AND NOT n.name='' WITH m, count(r) as rel_count order by rel_count desc LIMIT 10 MATCH p=(m)-[r:HasSession]->(n) RETURN n,r,m",
                "allowCollapse": true
            }]
        },
        {
            "name": "Top Ten Users with Most Local Admin Rights",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User),(m:Computer), (n)-[r:AdminTo]->(m) WHERE NOT n.name STARTS WITH 'ANONYMOUS LOGON' AND NOT n.name='' WITH n, count(r) as rel_count order by rel_count desc LIMIT 10 MATCH p=(m)<-[r:AdminTo]-(n) RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Top Ten Computers with Most Admins",
            "queryList": [{
                "final": true,
                "query": "MATCH (n:User),(m:Computer), (n)-[r:AdminTo]->(m) WHERE NOT n.name STARTS WITH 'ANONYMOUS LOGON' AND NOT n.name='' WITH m, count(r) as rel_count order by rel_count desc LIMIT 10 MATCH p=(m)<-[r:AdminTo]-(n) RETURN p",
                "allowCollapse": true
            }]
        },
        {
            "name": ""
        },
        {
            "name": "Find machines Domain Users can RDP into",
            "queryList": [{
                "final": true,
                "query": "match p=(g:Group)-[:CanRDP]->(c:Computer) where g.objectid ENDS WITH '-513' return p"
            }]
        },
        {
            "name": "Find Servers Domain Users can RDP To",
            "queryList": [{
                "final": true,
                "query": "match p=(g:Group)-[:CanRDP]->(c:Computer) where g.name STARTS WITH 'DOMAIN USERS' AND c.operatingsystem CONTAINS 'Server' return p",
                "allowCollapse": true
            }]
        },
        {
            "name": "Find what groups can RDP",
            "queryList": [{
                "final": true,
                "query": "MATCH p=(m:Group)-[r:CanRDP]->(n:Computer) RETURN p"
            }]
        },
        {
            "name": ""
        },
        {
            "name": ""
        }
    ]
}
